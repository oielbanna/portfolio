@import "./colors.scss";

.about {
    display: flex;
    flex-direction: column;
    // background-color: $navy;
    color: $gray;

    .about_text-container {
        padding: 50px 0px;
        h1 {
            font-weight: 500;
        }
    }
    
    
}


$check-size: 12px;
#bio-length-form {
    max-width: 270px;
    min-width: 200px;

    .fieldset {
        border: none;
        padding: 0;
        padding-top: $check-size * 2; // leave the size of the radio button to the top
    }
      
    .legend {
        font-size: 0.85rem;
        font-variant: small-caps;
        font-weight: 400;
        letter-spacing: 0.05em;
        margin: 0;
        padding: 0;
        text-transform: lowercase;
        font-family: 'Roboto';
    }


.container{
    list-style: none;
    margin: 0;
    padding: 0;
    display: grid;
    grid-template-columns: repeat(4,1fr);

    li {
        color: lighten($gray, 0.4);
        display: inline-block;
        position: relative;

        &:first-child { // "shortest"
            label {
                letter-spacing: 0.05em;
            }
        }

        input[type=radio] {
            position: absolute;
            visibility: hidden;
            width: 100%;
            height: 100%;

            &:checked {
                ~ label {
                    color: $mustard;
        
                    &::before {
                        border-color: $mustard;
                    }
        
                    &::after {
                        transform: translate(0%, 0%);
                        visibility: visible;
                    }
                }
            }
        }

        label {
            display: block;
            position: relative;
            font-weight: 300;
            font-size: 0.85em;
            letter-spacing: 0.2em;
            z-index: 9;
            font-family: 'Roboto';
            cursor: pointer;
            transition: all 0.25s linear;


            &::before { // using this as the outer radiobutton
                content: "";
                position: absolute;
                height: $check-size;
                width: $check-size;
                background-color: transparent;
                border: 1px solid $gray;
                top: - (($check-size * 0.5) + $check-size);
                left: 0px;
                // transform: translateX(-50%);
                border-radius: 100%;
                transition: all 0.25s linear;

            }

            &::after { // we are using this as the inner dot
                content: "";
                position: absolute;
                background-color: $mustard;
                top: - ($check-size + ($check-size * 0.5) - 1);
                left: 1px;
                width: $check-size;
                height: $check-size;
                transform: translate(0%, -100%);
                border-radius: 100%;
                transition: all 0.25s cubic-bezier(.68,-0.55,.27,1.55);
                visibility: hidden;


            }
        }
    }
  }
    
}


  